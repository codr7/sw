C P S / L R

* add ; as end for :
** or consume all arguments

* change : to emit body

* override emitId for  SwMethodType
** call method with forms on stack

* add do macro
** consume until ; or end
** write body
** emit call

* eval : body with forms on stack

* , to eval top of stack

* add Expr form
** (...)
** begin/endPackage like []
** emit items

(foo:42; foo)
42 check

* more macros
** LC
** RC
** PC
** PS
** SC
** SP

fib: do C 1 > if dec C fib S else dec fib +;
1000 (20 fib P) benchmark say

fib: do
  RC 1 > if
    dec LC L + fib return
  else
    1 = if S;
  P;

* add load macro
