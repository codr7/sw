C P S / L R

* add Sexpr form
** (...)
** begin/endPackage like []
** emit Form iter
*** add iter protocol
*** add iter type

(foo:42; foo)
42 check

* add do
** consume until ; or end
** write body
** emit call

* add support for optional argument list in :
*** implement compile
** add support for ; in expr
** move arguments suffixed with ! like for macros
** three sections (a1;a2;r)
** middle section is optional
*** interpret two as (a1, r)
** interpret trailing type as belonging to previous argument in section
** simplify argument lists in readme

is-42 (Int;Bit):

* add dump-stack method
* add dump-call-stack

* add splat method (*)
** add to id reader
** replace stack with items
** add seq trait
*** add iter

* add pair literals
** form
** reader
** use as description
1:2

* add IdType/LiteralType
** derive formType
** add form.valuetype: ValueType

* add permutations
** aoc24/7
** iter of iters

* more macros
** LC
** RC
** PC
** PS
** SC
** SP

fib: do C 1 > if dec C fib S else dec fib +;
1000 (20 fib P) benchmark say

fib: do
  RC 1 > if
    dec LC L + fib return
  else
    1 = if S;
  P;

* add load macro
